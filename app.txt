# Import the dependencies.

import numpy as np
import pandas as pd
import datetime as dt

import sqlalchemy
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.orm import Session
from sqlalchemy import create_engine, func
from flask import Flask

#################################################
# Database Setup
#################################################


# reflect an existing database into a new model
engine = create_engine("sqlite:///Resources/hawaii.sqlite", echo=True)

# reflect an existing database into a new model
Base_Model  = automap_base()
# reflect the tables
Base_Model.prepare(engine, reflect=True)

# reflect the tables
Station = Base_Model.classes.station
Measurement = Base_Model.classes.measurement

session = Session(engine)

# Save references to each table


# Create our session (link) from Python to the DB


#################################################
# Flask Setup
#################################################

app = Flask(__name__)


#################################################
# Flask Routes
#################################################

@app.route("/")

def home():
    return("hello this is a sample page")

@app.route("/api/precipitation")
#code for Precipitation, JSON response 
def precipitation():
    m_prcp = session.query(Measurement.prcp , Measurement.date).\
    filter(Measurement.date > '2016-08-23').\
    order_by(Measurement.date).all()
    prdict = {date : x for date , x in m_prcp}
    return jsonify(prdict)


if __name__ == "__main__":
    app.run()
